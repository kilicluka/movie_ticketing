# Generated by Django 3.2.13 on 2022-05-07 17:24

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("movies", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Hall",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Instance's unique identifier.",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When was the instance created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When was the instance updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "hall_number",
                    models.SmallIntegerField(
                        help_text="Number of the movie hall.",
                        verbose_name="Hall Number",
                    ),
                ),
            ],
            options={
                "verbose_name": "Hall",
                "verbose_name_plural": "Halls",
                "db_table": "hall",
            },
        ),
        migrations.CreateModel(
            name="Reservation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Instance's unique identifier.",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When was the instance created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When was the instance updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[("OPEN", "Open"), ("COMPLETED", "Completed")],
                        default="OPEN",
                        help_text="Reservation's current status.",
                        max_length=9,
                        verbose_name="Status",
                    ),
                ),
                (
                    "expires_at",
                    models.DateTimeField(
                        help_text="When does the reservation expire if it hasn't been completed.",
                        verbose_name="Expires At",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reservation",
                "verbose_name_plural": "Reservations",
                "db_table": "reservation",
            },
        ),
        migrations.CreateModel(
            name="Showtime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Instance's unique identifier.",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When was the instance created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When was the instance updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "time_showing",
                    models.DateTimeField(
                        help_text="When is the movie showing.",
                        verbose_name="Time Showing",
                    ),
                ),
                (
                    "movie_format",
                    models.CharField(
                        choices=[("2D", "2D"), ("3D", "3D"), ("4DX", "4DX")],
                        default="2D",
                        help_text="Format in which the movie is showing.",
                        max_length=3,
                        verbose_name="Movie Format",
                    ),
                ),
                (
                    "hall",
                    models.ForeignKey(
                        help_text="Hall where the movie is showing.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="showtimes",
                        to="reservations.hall",
                        verbose_name="Hall",
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        help_text="Movie that is showing.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="showtimes",
                        to="movies.movie",
                        verbose_name="Movie",
                    ),
                ),
            ],
            options={
                "verbose_name": "Showtime",
                "verbose_name_plural": "Showtimes",
                "db_table": "showtime",
            },
        ),
        migrations.CreateModel(
            name="Seat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Instance's unique identifier.",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When was the instance created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When was the instance updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "row_identifier",
                    models.CharField(
                        choices=[
                            ("A", "A"),
                            ("B", "B"),
                            ("C", "C"),
                            ("D", "D"),
                            ("E", "E"),
                            ("F", "F"),
                            ("G", "G"),
                            ("H", "H"),
                            ("I", "I"),
                            ("J", "J"),
                            ("K", "K"),
                            ("L", "L"),
                            ("M", "M"),
                            ("N", "N"),
                            ("O", "O"),
                            ("P", "P"),
                            ("Q", "Q"),
                            ("R", "R"),
                            ("S", "S"),
                            ("T", "T"),
                            ("U", "U"),
                            ("V", "V"),
                            ("W", "W"),
                            ("X", "X"),
                            ("Y", "Y"),
                            ("Z", "Z"),
                        ],
                        help_text="Identifier of the row the seat belongs to.",
                        max_length=1,
                        verbose_name="Row Identifier",
                    ),
                ),
                (
                    "seat_identifier",
                    models.CharField(
                        choices=[
                            (1, 1),
                            (2, 2),
                            (3, 3),
                            (4, 4),
                            (5, 5),
                            (6, 6),
                            (7, 7),
                            (8, 8),
                            (9, 9),
                            (10, 10),
                            (11, 11),
                            (12, 12),
                            (13, 13),
                            (14, 14),
                            (15, 15),
                            (16, 16),
                            (17, 17),
                            (18, 18),
                            (19, 19),
                            (20, 20),
                            (21, 21),
                            (22, 22),
                            (23, 23),
                            (24, 24),
                            (25, 25),
                            (26, 26),
                            (27, 27),
                            (28, 28),
                            (29, 29),
                            (30, 30),
                            (31, 31),
                            (32, 32),
                            (33, 33),
                            (34, 34),
                            (35, 35),
                            (36, 36),
                            (37, 37),
                            (38, 38),
                            (39, 39),
                            (40, 40),
                            (41, 41),
                            (42, 42),
                            (43, 43),
                            (44, 44),
                            (45, 45),
                            (46, 46),
                            (47, 47),
                            (48, 48),
                            (49, 49),
                            (50, 50),
                            (51, 51),
                            (52, 52),
                            (53, 53),
                            (54, 54),
                            (55, 55),
                            (56, 56),
                            (57, 57),
                            (58, 58),
                            (59, 59),
                            (60, 60),
                            (61, 61),
                            (62, 62),
                            (63, 63),
                            (64, 64),
                            (65, 65),
                            (66, 66),
                            (67, 67),
                            (68, 68),
                            (69, 69),
                            (70, 70),
                            (71, 71),
                            (72, 72),
                            (73, 73),
                            (74, 74),
                            (75, 75),
                            (76, 76),
                            (77, 77),
                            (78, 78),
                            (79, 79),
                            (80, 80),
                            (81, 81),
                            (82, 82),
                            (83, 83),
                            (84, 84),
                            (85, 85),
                            (86, 86),
                            (87, 87),
                            (88, 88),
                            (89, 89),
                            (90, 90),
                            (91, 91),
                            (92, 92),
                            (93, 93),
                            (94, 94),
                            (95, 95),
                            (96, 96),
                            (97, 97),
                            (98, 98),
                            (99, 99),
                        ],
                        help_text="Identifier of the seat in the row.",
                        max_length=2,
                        verbose_name="Seat Identifier",
                    ),
                ),
                (
                    "hall",
                    models.ForeignKey(
                        help_text="Hall where the seat is located.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seats",
                        to="reservations.hall",
                        verbose_name="Hall",
                    ),
                ),
            ],
            options={
                "verbose_name": "Seat",
                "verbose_name_plural": "Seats",
                "db_table": "seat",
                "unique_together": {("hall", "row_identifier", "seat_identifier")},
            },
        ),
        migrations.CreateModel(
            name="ReservationSeat",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Instance's unique identifier.",
                        unique=True,
                        verbose_name="UUID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="When was the instance created.",
                        verbose_name="Created At",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="When was the instance updated.",
                        verbose_name="Updated At",
                    ),
                ),
                (
                    "reservation",
                    models.ForeignKey(
                        help_text="Reservation which the seat belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservation_seats",
                        to="reservations.reservation",
                        verbose_name="Reservation",
                    ),
                ),
                (
                    "seat",
                    models.ForeignKey(
                        help_text="Seat which is reserved.",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reservation_seats",
                        to="reservations.seat",
                        verbose_name="Seat",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reservation Seat",
                "verbose_name_plural": "Reservation Seats",
                "db_table": "reservation_seat",
            },
        ),
        migrations.AddField(
            model_name="reservation",
            name="seats",
            field=models.ManyToManyField(
                help_text="Seats reserved with this reservation.",
                related_name="reservations",
                through="reservations.ReservationSeat",
                to="reservations.Seat",
                verbose_name="Seats",
            ),
        ),
        migrations.AddField(
            model_name="reservation",
            name="showtime",
            field=models.ForeignKey(
                help_text="Showtime for which the reservation was created.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reservations",
                to="reservations.showtime",
                verbose_name="Showtime",
            ),
        ),
        migrations.AddField(
            model_name="reservation",
            name="user",
            field=models.ForeignKey(
                help_text="User who made the reservation.",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="reservations",
                to=settings.AUTH_USER_MODEL,
                verbose_name="User",
            ),
        ),
    ]
